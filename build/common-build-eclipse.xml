<!--
    Copyright 2012 JST contributors
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project name="jst-common-build-eclipse">

    <property file="${jst-common-build.dir}/common-build-eclipse.properties" />

    <!-- wrapper of eclipse download urls which have a common pattern -->
    <macrodef name="check-eclipse-download">
        <attribute name="property" />
        <attribute name="name" />
        <attribute name="md5" />
        <sequential>
            <echo file="${build-deps.dir}/@{name}.zip.md5" message="@{md5}" />
            <condition property="@{property}">
                <and>
                    <available file="${build-deps.dir}/@{name}.zip" />
                    <checksum file="${build-deps.dir}/@{name}.zip" algorithm="MD5" />
                </and>
            </condition>
        </sequential>
    </macrodef>
    <macrodef name="eclipse-download">
        <attribute name="name" />
        <attribute name="dropdir" />
        <sequential>
            <mkdir dir="${build-deps.dir}" />
            <delete file="${build-deps.dir}/@{name}.zip" failonerror="false" />
            <get src="${eclipse.download.baseurl}?file=/@{dropdir}/@{name}.zip&amp;url=${eclipse.download.mirror.url}/@{dropdir}/@{name}.zip&amp;mirror_id=${eclipse.download.mirror.id}" dest="${build-deps.dir}/@{name}.zip" verbose="yes" />
            <checksum file="${build-deps.dir}/@{name}.zip" algorithm="MD5" />
        </sequential>
    </macrodef>

    <target name="-check-download-sdk">
        <check-eclipse-download name="${eclipse.download.sdk.name}" property="eclipse.sdk.downloaded" md5="${eclipse.download.sdk.md5}" />
    </target>

    <target name="-get-sdk" depends="-check-download-sdk" unless="eclipse.sdk.downloaded">
        <eclipse-download name="${eclipse.download.sdk.name}" dropdir="${eclipse.download.sdk.dropdir}" />
    </target>

    <target name="-check-download-xtext">
        <check-eclipse-download name="${eclipse.download.xtext.name}" property="eclipse.xtext.downloaded" md5="${eclipse.download.xtext.md5}" />
    </target>

    <target name="-get-xtext" depends="-check-download-xtext" unless="eclipse.xtext.downloaded">
        <eclipse-download name="${eclipse.download.xtext.name}" dropdir="${eclipse.download.xtext.dropdir}" />
    </target>

    <target name="-check-unzip-eclipse">
        <condition property="eclipse.unzipped">
            <available file="${build-deps.dir}/${eclipse.download.sdk.name}" />
        </condition>
    </target>

    <target name="-unzip-eclipse" depends="-check-unzip-eclipse" unless="eclipse.unzipped">
        <delete dir="${build-deps.dir}/eclipse" failonerror="false" />
        <delete dir="${build-deps.dir}/${eclipse.download.sdk.name}" failonerror="false" />
        <unzip src="${build-deps.dir}/${eclipse.download.sdk.name}.zip" dest="${build-deps.dir}" />
        <unzip src="${build-deps.dir}/${eclipse.download.xtext.name}.zip" dest="${build-deps.dir}" />
        <move file="${build-deps.dir}/eclipse" tofile="${build-deps.dir}/${eclipse.download.sdk.name}" />
    </target>

    <target name="get-eclipse" depends="-get-sdk,-get-xtext,-unzip-eclipse" description="Download an Eclipse SDK with Xtext for the build">
        <property name="eclipse.home" location="${build-deps.dir}/${eclipse.download.sdk.name}" />
    </target>

    <target name="eclipse-launcher-classpath" depends="get-eclipse">
        <!-- store path to newest launcher JAR in path id 'newest.equinox.launcher.path.id' -->
        <path id="newest.equinox.launcher.path.id">
            <first count="1">
                <sort>
                    <fileset dir="${eclipse.home}/plugins" includes="**/org.eclipse.equinox.launcher_*.jar" />
                    <!-- Seems the default order is oldest > newest so we must reverse it.
                       The 'reverse' and 'date' comparators are in the internal antlib
                       org.apache.tools.ant.types.resources.comparators.
                    -->
                    <reverse xmlns="antlib:org.apache.tools.ant.types.resources.comparators">
                        <!-- 'date' inherits 'reverse's namespace -->
                        <date />
                    </reverse>
                </sort>
            </first>
        </path>

        <!-- turn the path into a property -->
        <property name="eclipse.classpath" refid="newest.equinox.launcher.path.id" />
    </target>

</project>