<!--
    Copyright 2012 JST contributors
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project name="jst" xmlns:ivy="antlib:org.apache.ivy.ant">

    <property name="ivy.version" value="2.4.0-alpha" />

    <target name="-check-build-deps">
        <condition property="build-deps.exist">
            <and>
                <available file="${basedir}/build-deps/antlr-3.4-complete.jar" />
                <available file="${basedir}/build-deps/antlr3-task/ant-antlr3.jar" />
                <available file="${basedir}/build-deps/ivy-${ivy.version}.jar" />
            </and>
        </condition>
        <mkdir dir="${user.home}/.ivy2/lib/" />
    </target>

    <target name="-download-build-deps" depends="-check-build-deps" unless="build-deps.exist">
        <mkdir dir="${basedir}/build-deps" />
        <get src="https://builds.apache.org/pview/job/Ivy/lastSuccessfulBuild/artifact/trunk/build/artifact/jars/ivy.jar" dest="${basedir}/build-deps/ivy-${ivy.version}.jar" usetimestamp="true" />
        <get src="http://antlr.org/download/antlr-3.4-complete.jar" dest="${basedir}/build-deps/antlr-3.4-complete.jar" usetimestamp="true" />
        <get src="http://www.antlr.org/share/1169924912745/antlr3-task.zip" dest="${basedir}/build-deps/antlr3-task.zip" usetimestamp="true" />
        <unzip src="${basedir}/build-deps/antlr3-task.zip" dest="${basedir}/build-deps/" />
    </target>

    <target name="init" depends="-download-build-deps">
        <taskdef name="antlr3" classname="org.apache.tools.ant.antlr.ANTLR3">
            <classpath>
                <pathelement path="${basedir}/build-deps/antlr-3.4-complete.jar" />
                <pathelement path="${basedir}/build-deps/antlr3-task/ant-antlr3.jar" />
            </classpath>
        </taskdef>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath="${basedir}/build-deps/ivy-${ivy.version}.jar" />
    </target>

    <target name="ivy:configure" depends="init">
        <ivy:configure file="ivysettings.xml" />
    </target>

    <target name="get-deps" depends="init,ivy:configure" description="Download dependencies" >
        <ivy:resolve file="ivy-fixed.xml" conf="*" uncompress="true" />
        <ivy:cachepath pathid="runtime.classpath" conf="runtime" type="jar" uncompress="true" osgi="true" />
        <ivy:cachepath pathid="generate.classpath" conf="generate" type="jar" uncompress="true" osgi="true" />
        <echo message="${toString:runtime.classpath}" file=".runtime.classpath" />
        <echo message="${toString:generate.classpath}" file=".generate.classpath" />
    </target>

    <target name="-do-update-deps" depends="init,ivy:configure">
        <ivy:resolve file="ivy.xml" conf="*" uncompress="true" resolveId="jst-update-deps" />
        <ivy:fixdeps tofile="ivy-fixed.xml" resolveId="jst-update-deps" />
    </target>

    <target name="update-deps" depends="-do-update-deps,get-deps" description="Update dependencies (to be called on ivy.xml chnage)" />

    <target name="clean" description="Clean build artifacts">
        <delete dir="${basedir}/build" />
    </target>

    <target name="clean-gen" description="Clean generate files">
        <delete dir="${basedir}/org.hibnet.jst/src-gen" />
        <delete dir="${basedir}/org.hibnet.jst.ui/src-gen" />
        <delete dir="${basedir}/org.hibnet.jst.tests/src-gen" />
        <mkdir dir="${basedir}/org.hibnet.jst/src-gen" />
        <mkdir dir="${basedir}/org.hibnet.jst.ui/src-gen" />
        <mkdir dir="${basedir}/org.hibnet.jst.tests/src-gen" />
    </target>

    <target name="generate-antlr" depends="init" description="Generate the simple ANTLR parser">
        <mkdir dir="${basedir}/org.hibnet.jst/src/org/apache/ant/antdsl/antlr" />
        <antlr3 target="${basedir}/org.hibnet.jst/src/org/apache/ant/antdsl/AntDSL.g" outputdirectory="${basedir}/org.hibnet.jst/src/org/apache/ant/antdsl/antlr" />
    </target>

    <target name="generate-xtext" description="Generate XText and Ecore files for the full plugin">
        <loadpath pathid="generate.classpath" file=".generate.classpath" />
        <java classname="org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher" dir="${basedir}/org.hibnet.jst" fork="true" failonerror="true">
            <classpath>
                <pathelement path="${basedir}/org.hibnet.jst/src/" />
                <path refid="generate.classpath" />
            </classpath>
            <arg line="src/org/hibnet/jst/GenerateJst.mwe2" />
        </java>
    </target>

    <target name="build" description="Full build of a jst jar">
        <loadpath pathid="runtime.classpath" file=".runtime.classpath" />
        <mkdir dir="${basedir}/build/classes" />
        <javac srcdir="${basedir}/org.hibnet.jst/src/:${basedir}/org.hibnet.jst/src-gen/:${basedir}/org.hibnet.jst/xtend-gen" destdir="${basedir}/build/classes" debug="on" includeantruntime="false" source="1.6" target="1.6" classpathref="runtime.classpath" />
        <copy todir="${basedir}/build/classes">
            <fileset dir="${basedir}/org.hibnet.jst/src">
                <exclude name="*.java" />
            </fileset>
            <fileset dir="${basedir}/org.hibnet.jst/src-gen">
                <exclude name="*.java" />
            </fileset>
            <fileset dir="${basedir}/org.hibnet.jst/xtend-gen">
                <exclude name="*.java" />
            </fileset>
            <fileset dir="${basedir}/org.hibnet.jst" includes="META-INF/**/*" />
        </copy>
        <jar destfile="${basedir}/build/jst.jar" basedir="${basedir}/build/classes" />
    </target>

    <macrodef name="loadpath">
        <attribute name="pathid" />
        <attribute name="file" />
        <sequential>
            <path id="@{pathid}">
                <resourcelist>
                    <file file="@{file}" />
                    <filterchain>
                        <tokenfilter>
                            <replacestring from="${path.separator}" to="${line.separator}"/>
                        </tokenfilter>
                    </filterchain>
                </resourcelist>
            </path>
        </sequential>
    </macrodef>
</project>